#!/usr/bin/perl -w

$__DEBUG__ = 0x00;

	unless ( $#ARGV == 0 ) {
		print STDERR <<EOT;
$0 ribFile
EOT
		exit 1;
	}
	open( RIB, '< ' . $ARGV[ 0 ] ) || die( 'Cannot open ' . $ARGV[ 0 ] . $/ );
	if ( SplitRibFile( RIB ) != 0 ) {
		print STDERR 'SplitRibFile Error...' . $/;
		exit 1;
	}
	close( RIB );

sub SplitRibFile
{
#
	open( OLD_STDIN, '<& STDIN' );
	open( STDIN, '<& ' . $_[ 0 ] );
#
#
#	Display name type mode ...parameterlist...
#
#	MakeTexture picturename texturename swrap twrap filter swidth twidth ...parameterlist...
#	MakeLatLongEnvironment picturename texturename filter swidth twidth ...parameterlist...
#	MakeCubeFaceEnvironment px nx py ny pz nz texturename fov filter swidth twidth ...parameterlist...
#	MakeShadow picturename texturename ...parameterlist...
#
	my	$FRAME_BEGIN = '^\s*FrameBegin\s*(\d+)\s*$';
	my	$FRAME_END = '^\s*FrameEnd\s*$';

	my	$DISPLAY = '^\s*Display\s*"([^+]+?)"\s*"(.+?)"\s*"(.+?)"\s*(.*)\s*$';
	my	$display_name = '';
	my	$display_type = '';
	my	$display_mode = '';

	my	$head = '';
	my	$in_head = 1;		# 0: no, 1: yes
	my	$frame_content = '';
	my	$in_frame = 0;		# 0: no, 1: yes
	my	$interim = '';		# between frames (FrameEnd .. FrameBegin)

#	my	$basename = '';
#	my	$extension = '';
	while ( <STDIN> ) {
		if ( /$FRAME_BEGIN/ ) {
			# assert( $in_frame == 0 )
			$frame_content = $_;
			$in_frame = 1;
			if ( $in_head == 1 ) {
				# end of $head
				$in_head = 0;
			} elsif ( $interim ) {
if ( $__DEBUG__ & 0x01 ) {
	print STDERR <<INTERIM;
@{ [ '-' x 72 ] }
$interim@{ [ '-' x 72 ] }
INTERIM
}
				$interim = '';
			}
		} elsif ( /$FRAME_END/ ) {
			# assert( $in_frame == 1 )
			# assert( $display_name != '' )
			$frame_content .= $_;

			# print $frame_content or save it!
			unless ( $display_name =~ /\/(([^\/]+)\.([^\.]+))$/ ) {
				print STDERR 'unless ( $display_name =~ /\/(([^\/]+)\.([^\.]+))$/ ) { ...... }' . $/;
				return 1;
			}
if ( $__DEBUG__ & 0x02 ) {
	print STDERR <<EOT
@{ [ '#' x 72 ] }
name = '$display_name'
xxxx = '$1'
yyyy = '$2'
zzzz = '$3'
type = '$display_type'
mode = '$display_mode'
@{ [ '#' x 72 ] }
EOT
}
			unless ( $display_type ne 'shadow' ) {
				open( OUT, '> xxx_' . $1 . '.rib' ) || die( 'open( OUT, ...... )' );
				print( OUT $head );
				print( OUT $frame_content );
				close( OUT );
			}

			# reset variables
			$display_name = '';
			$display_type = '';
			$display_mode = '';
			$frame_content = '';
			$in_frame = 0;
		} else {
			if ( $in_head == 1 ) {
				$head .= $_;
			} else {
				if ( $in_frame == 1 ) {
					if ( /$DISPLAY/ ) {
						# assert( $display_name == '' )
						$display_name = $1;
						$display_type = $2;
						$display_mode = $3;
if ( $__DEBUG__ & 0x01 ) {
	print STDERR <<DISPLAY;
@{ [ '+' x 72 ] }
${_}name = '$display_name'
type = '$display_type'
mode = '$display_mode'
@{ [ '+' x 72 ] }
DISPLAY
}
					}
					$frame_content .= $_;
				} else {
					$interim .= $_;
				}
			}
		}
	}
	# assert( $in_head == 0 )
if ( $__DEBUG__ & 0x01 ) {
	print STDERR <<HEAD;
@{ [ '=' x 72 ] }
$head@{ [ '=' x 72 ] }
HEAD
}

#
	open( STDIN, '<& OLD_STDIN' );
#
	return 0;
}
